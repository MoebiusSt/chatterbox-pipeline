---
description: 
globs: 
alwaysApply: true
---
Wenn ich Dir sage "git" führe aus:
1. Git status prüfen (https://github.com/MoebiusSt/tts_pipeline_enhanced/). Prüfe auf Plausibilität ob wir im richtigen Branch arbeiten.
2. Änderungen stagen: (git add .)
3. Commit mit einer kurzen Beschreibung der Änderungen erstellen
4. Automatisch pushen (git push origin [branch])
5. Extra-kurze, sachliche Zusammenfassung der wichtigsten Änderungen seit dem letzten Commit in Listenform liefern.
6. Starte ein Hintergrundterminal das nach 10 Minuten nach dem push zu github [check_ci.py](mdc:scripts/check_ci.py) ausführt. Dieses wird github CI Action Worflow Ergebisse des Linters, myPy, Black und der isort Üüberprüfungen abrufen un in ein LogFile [check_ci_latest_commit.log](mdc:logs/check_ci_latest_commit.log) schreiben. Bevor Du dir das neue Log file anguckst, stelle sicher das [check_ci_latest_commit.log](mdc:logs/check_ci_latest_commit.log) in den letzten Minuten erstellt wurde (also nicht ein altes Logfile sit). Analysiere die Fehler und erstelle einen Debugging-Plan für die systematische Bearbeitung der Fehler. Präsentiere mir den Plan und frage mich bevor du beginnst den Debugging-Plan abzuarbeiten.